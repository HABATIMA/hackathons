import cv2
import os
import numpy as np
from tensorflow import keras

def load_test_images(folder_path):
    images = []
    for filename in sorted(os.listdir(folder_path)):
        if filename.endswith(".jpg"):
            img_path = os.path.join(folder_path, filename)
            img = cv2.imread(img_path)
            img = cv2.resize(img, (256, 144))  # Масштабируем изображение
            images.append(img)
    return np.array(images) / 255.0

# Папка с тестовыми изображениями
test_image_folder = 'frames_bad'

# Загрузка и предобработка тестовых изображений
test_images = load_test_images(test_image_folder)

# Загрузка обученной модели
model = keras.models.load_model('super_resolution_model.h5')

# Использование модели для улучшения разрешения изображений
super_res_images = model.predict(test_images)

# Папка для сохранения улучшенных изображений
output_folder = 'super_res_test_results'

if not os.path.exists(output_folder):
    os.makedirs(output_folder)

# Сохранение улучшенных изображений
for i, super_res_image in enumerate(super_res_images):
    img_filename = os.path.join(output_folder, f"super_res_image_{i:04d}.jpg")
    super_res_image = (super_res_image * 255).astype(np.uint8)
    cv2.imwrite(img_filename, super_res_image)
